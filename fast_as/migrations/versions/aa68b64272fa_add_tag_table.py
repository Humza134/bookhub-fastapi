"""add tag table

Revision ID: aa68b64272fa
Revises: 0b41e7b439fc
Create Date: 2025-06-01 15:25:00.389964

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'aa68b64272fa'
down_revision: Union[str, None] = '0b41e7b439fc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tag',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('uid', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_tag_uid'), 'tag', ['uid'], unique=False)
    op.create_table('booktag',
    sa.Column('book_uid', sa.Uuid(), nullable=False),
    sa.Column('tag_uid', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['book_uid'], ['book.uid'], ),
    sa.ForeignKeyConstraint(['tag_uid'], ['tag.uid'], ),
    sa.PrimaryKeyConstraint('book_uid', 'tag_uid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('booktag')
    op.drop_index(op.f('ix_tag_uid'), table_name='tag')
    op.drop_table('tag')
    # ### end Alembic commands ###
